{"version":3,"sources":["Population.js","MedianIncome.js","IncomeComparison.js","UnemploymentVsCrime.js","UnemploymentVsIncome.js","AgeGroupPopulation.js","App.js","serviceWorker.js","index.js"],"names":["PopulationData","Population","this","drawChart","margin","width","height","formatComma","d3","svg","append","attr","x","range","domain","map","d","year","padding","call","selectAll","style","y","data","enter","population","bandwidth","text","id","React","Component","IncomeData","MedianIncome","datum","income","html","IncomeCitiesData","IncomeComparison","tooltip","tooltipLine","color","history","name","on","Math","floor","invert","pageX","pageY","find","h","position","backgroundColor","UnemploymentCrimeData","UnemploymentVsCrime","crime","unemployment","UnemploymentIncomeData","TrendLine","UnemploymentVsIncome","AgeGroupPopulationData","AgeGroupPopulation","radius","min","data_ready","value","pie","arcGenerator","innerRadius","outerRadius","key","centroid","App","state","className","fontStyle","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bd7cf26b.chunk.js","sourcesContent":["import React from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nconst PopulationData = [\r\n    {\r\n        'year': 2009,\r\n        'population': 1107192\r\n    },\r\n    {\r\n        'year': 2010,\r\n        'population': 1123699\r\n    },\r\n    {\r\n        'year': 2011,\r\n        'population': 1141585\r\n    },\r\n    {\r\n        'year': 2012,\r\n        'population': 1120225\r\n    },\r\n    {\r\n        'year': 2013,\r\n        'population': 1149552\r\n    },\r\n    {\r\n        'year': 2014,\r\n        'population': 1242290\r\n    },\r\n    {\r\n        'year': 2015,\r\n        'population': 1261596\r\n    },\r\n    {\r\n        'year': 2016,\r\n        'population': 1278982\r\n    },\r\n    {\r\n        'year': 2017,\r\n        'population': 1292133\r\n    },\r\n    {\r\n        'year': 2018,\r\n        'population': 1311833\r\n    },\r\n];\r\nclass Population extends React.Component {\r\n    componentDidMount() {\r\n        this.drawChart();\r\n    }\r\n    drawChart() {\r\n        // set the dimensions and margins of the graph\r\n        var margin = { top: 30, right: 30, bottom: 70, left: 60 },\r\n            width = 800 - margin.left - margin.right,\r\n            height = 320 - margin.top - margin.bottom;\r\n        //Set variable\r\n        \r\n        const formatComma = d3.format(\",\")\r\n\r\n        //Set svg\r\n        const svg = d3.select(\"#population_data\")\r\n            .append(\"svg\")\r\n            .attr(\"width\", width + margin.left + margin.right)\r\n            .attr(\"height\", height + margin.top + margin.bottom)\r\n            //.style(\"margin-left\", \"300\");\r\n            .append(\"g\")\r\n            .attr(\"transform\",\r\n                \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n        // Draw axis\r\n        //XAxis\r\n        var x = d3.scaleBand()\r\n            .range([0, width])\r\n            .domain(PopulationData.map(function (d) { return d.year; }))\r\n            .padding(0.2);\r\n        svg.append(\"g\")\r\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n            .call(d3.axisBottom(x))\r\n            .selectAll(\"text\")\r\n            .attr(\"transform\", \"translate(-10,0)\")\r\n            .style(\"text-anchor\", \"middle\");\r\n\r\n        //YAxis       \r\n        var y = d3.scaleLinear()\r\n            .domain([0, 1500000])\r\n            .range([height, 0]);\r\n        svg.append(\"g\")\r\n            .call(d3.axisLeft(y));\r\n\r\n        // Draw bar chart\r\n        svg.selectAll(\"mybar\")\r\n            .data(PopulationData)\r\n            .enter()\r\n            .append(\"rect\")\r\n            // .attr(\"x\", (d, i) => 30 + i * 70)\r\n            //.attr(\"y\", (d, i) => 300 - d.population / 5000)\r\n            .attr(\"x\", function (d) { return x(d.year); })\r\n            .attr(\"y\", function (d) { return y(d.population); })\r\n            // .attr(\"width\", 35)\r\n            // .attr(\"height\", (d, i) => d.population / 5000)\r\n            .attr(\"width\", x.bandwidth() / 4 * 3)\r\n            .attr(\"height\", function (d) { return height - y(d.population); })\r\n            .attr(\"fill\", \"green\")\r\n            //tooltip\r\n            .append('title')\r\n            .text(function (d) { return 'Population : ' + formatComma(d.population); })\r\n        //Add title\r\n        svg.append(\"text\")\r\n            .attr(\"x\", 200)\r\n            .attr(\"y\", 15)\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .style(\"font-size\", \"20px\")\r\n            //.attr(\"font-weight\",'bold')          \r\n            .text(\"Historical Total Population\");\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"population_data\"></div>\r\n        )\r\n    }\r\n};\r\nexport default Population;","import React from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nconst IncomeData = [\r\n    {\r\n        'year': 2000,\r\n        'income': 60400\r\n    },\r\n    {\r\n        'year': 2001,\r\n        'income': 64700\r\n    },\r\n    {\r\n        'year': 2002,\r\n        'income': 66200\r\n    },\r\n    {\r\n        'year': 2003,\r\n        'income': 67200\r\n    },\r\n    {\r\n        'year': 2004,\r\n        'income': 70500\r\n    },\r\n    {\r\n        'year': 2005,\r\n        'income': 74700\r\n    },\r\n    {\r\n        'year': 2006,\r\n        'income': 82600\r\n    },\r\n    {\r\n        'year': 2007,\r\n        'income': 87120\r\n    },\r\n    {\r\n        'year': 2008,\r\n        'income': 90630\r\n    },\r\n    {\r\n        'year': 2009,\r\n        'income': 87470\r\n    },\r\n    {\r\n        'year': 2010,\r\n        'income': 88400\r\n    },\r\n    {\r\n        'year': 2011,\r\n        'income': 92160\r\n    },\r\n    {\r\n        'year': 2012,\r\n        'income': 96990\r\n    },\r\n    {\r\n        'year': 2013,\r\n        'income': 99850\r\n    },\r\n    {\r\n        'year': 2014,\r\n        'income': 102890\r\n    },\r\n    {\r\n        'year': 2015,\r\n        'income': 102700\r\n    },\r\n    {\r\n        'year': 2016,\r\n        'income': 98620\r\n    },\r\n    {\r\n        'year': 2017,\r\n        'income': 100320\r\n    },\r\n];\r\nclass MedianIncome extends React.Component {\r\n    componentDidMount() {\r\n        this.drawChart();\r\n    }\r\n    drawChart() {\r\n        \r\n        // set the dimensions and margins of the graph\r\n        var margin = { top: 30, right: 30, bottom: 70, left: 60 },\r\n            width = 800 - margin.left - margin.right,\r\n            height = 320 - margin.top - margin.bottom;\r\n        //Set variable        \r\n        const formatComma = d3.format(\",\")\r\n\r\n        //Set svg\r\n        const svg = d3.select(\"#income_data\")\r\n            .append(\"svg\")\r\n            .attr(\"width\", width + margin.left + margin.right)\r\n            .attr(\"height\", height + margin.top + margin.bottom)\r\n            //.style(\"margin-left\", \"300\");\r\n            .append(\"g\")\r\n            .attr(\"transform\",\r\n                \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n        // Draw axis\r\n\r\n        //XAxis\r\n        var x = d3.scalePoint()\r\n            .domain(['2000','2001','2002','2003','2004','2005','2006','2007','2008','2009','2010','2011','2012','2013','2014','2015','2016','2017'])  \r\n            .range([0, width]);\r\n        svg.append(\"g\")\r\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n            .call(d3.axisBottom(x));\r\n\r\n\r\n        //YAxis       \r\n        var y = d3.scaleLinear()\r\n            .domain([0, 110000])\r\n            .range([height, 0]);\r\n        svg.append(\"g\")\r\n            .call(d3.axisLeft(y));\r\n\r\n        // Draw the line\r\n        svg.append(\"path\")\r\n            .datum(IncomeData)\r\n            .attr(\"fill\", \"none\")\r\n            .attr(\"stroke\", \"green\")\r\n            .attr(\"stroke-width\", 1.5)\r\n            .attr(\"d\", d3.line()\r\n                .x(function (d) { return x(d.year) })\r\n                .y(function (d) { return y(d.income) })\r\n            )\r\n        \r\n\r\n        // Draw the points\r\n        svg.append(\"g\")\r\n            .selectAll(\"dot\")\r\n            .data(IncomeData)\r\n            .attr(\"id\", \"dotIncome\")\r\n            .enter()\r\n            .append(\"circle\")\r\n            .attr(\"cx\", function (d) { return x(d.year) })\r\n            .attr(\"cy\", function (d) { return y(d.income) })\r\n            .attr(\"r\", 5)\r\n            .attr(\"fill\", \"green\")\r\n            //tooltip\r\n            .append('title')\r\n            .attr(\"data-html\", \"true\")\r\n            .html(function (d) { return 'Median Income ('+d.year + '): $' + formatComma(d.income) ;})\r\n            \r\n\r\n        //Add title\r\n        svg.append(\"text\")\r\n            .attr(\"x\", 200)\r\n            .attr(\"y\", 15)\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .style(\"font-size\", \"20px\")\r\n            //.attr(\"font-weight\",'bold')          \r\n            .text(\"Historical Median Household Income\");\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"income_data\"></div>\r\n        )\r\n    }\r\n};\r\nexport default MedianIncome;","import React from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nconst IncomeCitiesData = [{\r\n    \"name\": \"Calgary\",\r\n    \"show\": true,\r\n    \"color\": \"green\",\r\n    \"currentIncome\": 102060,\r\n    \"height\": 102060,\r\n    \"history\": [\r\n        {\r\n            \"year\": 2005,\r\n            \"income\": 74700\r\n        },\r\n        {\r\n            \"year\": 2006,\r\n            \"income\": 82600\r\n        },\r\n        {\r\n            \"year\": 2007,\r\n            \"income\": 87120\r\n        },\r\n        {\r\n            \"year\": 2008,\r\n            \"income\": 90630\r\n        },\r\n        {\r\n            \"year\": 2009,\r\n            \"income\": 87470\r\n        },\r\n        {\r\n            \"year\": 2010,\r\n            \"income\": 88400\r\n        },\r\n        {\r\n            \"year\": 2011,\r\n            \"income\": 92160\r\n        },\r\n        {\r\n            \"year\": 2012,\r\n            \"income\": 96990\r\n        },\r\n        {\r\n            \"year\": 2013,\r\n            \"income\": 99850\r\n        },\r\n        {\r\n            \"year\": 2014,\r\n            \"income\": 102890\r\n        },\r\n        {\r\n            \"year\": 2015,\r\n            \"income\": 102700\r\n        },\r\n        {\r\n            \"year\": 2016,\r\n            \"income\": 98620\r\n        },\r\n        {\r\n            \"year\": 2017,\r\n            \"income\": 100320\r\n        },\r\n    ]\r\n},\r\n{\r\n    \"name\": \"Edmonton\",\r\n    \"show\": true,\r\n    \"color\": \"blue\",\r\n    \"currentIncome\": 93600,\r\n    \"height\": 93000,\r\n    \"history\": [\r\n        {\r\n            \"year\": 2005,\r\n            \"income\": 66400\r\n        },\r\n        {\r\n            \"year\": 2006,\r\n            \"income\": 72800\r\n        },\r\n        {\r\n            \"year\": 2007,\r\n            \"income\": 76720\r\n        },\r\n        {\r\n            \"year\": 2008,\r\n            \"income\": 81230\r\n        },\r\n        {\r\n            \"year\": 2009,\r\n            \"income\": 79190\r\n        },\r\n        {\r\n            \"year\": 2010,\r\n            \"income\": 80590\r\n        },\r\n        {\r\n            \"year\": 2011,\r\n            \"income\": 84140\r\n        },\r\n        {\r\n            \"year\": 2012,\r\n            \"income\": 88010\r\n        },\r\n        {\r\n            \"year\": 2013,\r\n            \"income\": 90300\r\n        },\r\n        {\r\n            \"year\": 2014,\r\n            \"income\": 92930\r\n        },\r\n        {\r\n            \"year\": 2015,\r\n            \"income\": 93640\r\n        },\r\n        {\r\n            \"year\": 2016,\r\n            \"income\": 91160\r\n        },\r\n        {\r\n            \"year\": 2017,\r\n            \"income\": 93600\r\n        },\r\n    ]\r\n},\r\n{\r\n    \"name\": \"Canada\",\r\n    \"show\": true,\r\n    \"color\": \"red\",\r\n    \"currentIncome\": 84950,\r\n    \"height\": 85000,\r\n    \"history\": [\r\n        {\r\n            \"year\": 2005,\r\n            \"income\": 60600\r\n        },\r\n        {\r\n            \"year\": 2006,\r\n            \"income\": 63600\r\n        },\r\n        {\r\n            \"year\": 2007,\r\n            \"income\": 66550\r\n        },\r\n        {\r\n            \"year\": 2008,\r\n            \"income\": 68860\r\n        },\r\n        {\r\n            \"year\": 2009,\r\n            \"income\": 68410\r\n        },\r\n        {\r\n            \"year\": 2010,\r\n            \"income\": 69860\r\n        },        \r\n        {\r\n            \"year\": 2011,\r\n            \"income\":72240\r\n        },\r\n        {\r\n            \"year\": 2012,\r\n            \"income\": 74540\r\n        },\r\n        {\r\n            \"year\": 2013,\r\n            \"income\": 76550\r\n        },\r\n        {\r\n            \"year\": 2014,\r\n            \"income\": 78870\r\n        },\r\n        {\r\n            \"year\": 2015,\r\n            \"income\": 80940\r\n        },\r\n        {\r\n            \"year\": 2016,\r\n            \"income\": 82110\r\n        },\r\n        {\r\n            \"year\": 2017,\r\n            \"income\": 84950\r\n        },\r\n    ]\r\n},\r\n\r\n];\r\nclass IncomeComparison extends React.Component {\r\n    componentDidMount() {\r\n        this.drawChart();\r\n    }\r\n    drawChart() {\r\n\r\n        // set the dimensions and margins of the graph\r\n        var margin = { top: 30, right: 30, bottom: 70, left: 60 },\r\n            width = 800 - margin.left - margin.right,\r\n            height = 320 - margin.top - margin.bottom;\r\n\r\n         //Set svg\r\n         const svg = d3.select(\"#income_data\")\r\n         .append(\"svg\")\r\n         .attr(\"width\", width + margin.left + margin.right)\r\n         .attr(\"height\", height + margin.top + margin.bottom)\r\n         //.style(\"margin-left\", \"300\");\r\n         .append(\"g\")\r\n         .attr(\"transform\",\r\n             \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n        // Define the scales and tell D3 how to draw the line        \r\n        const line = d3.line().x(d => x(d.year)).y(d => y(d.income));\r\n        const formatComma = d3.format(\",\")\r\n        //const chart = d3.select('svg').append('g')\r\n         //   .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\r\n\r\n        const tooltip = d3.select('#tooltip');\r\n        const tooltipLine = svg.append('line');\r\n\r\n        // Add the axes and a title\r\n        //const xAxis = d3.axisBottom(x).tickFormat(d3.format('.4'));\r\n        //const yAxis = d3.axisLeft(y).tickFormat(d3.format('.2s'));\r\n       // chart.append('g').call(yAxis);\r\n        //chart.append('g').attr('transform', 'translate(0,' + height + ')').call(xAxis);\r\n        \r\n         //Add title\r\n         svg.append(\"text\")\r\n         .attr(\"x\", 200)\r\n         .attr(\"y\", 15)\r\n         .attr(\"text-anchor\", \"begin\")\r\n         .style(\"font-size\", \"20px\")\r\n         //.attr(\"font-weight\",'bold')          \r\n         .text(\"Historical Median Household Income in Different Cities\");\r\n\r\n         // Draw axis\r\n        //XAxis\r\n        var x = d3.scaleLinear()\r\n        .domain([2005, 2017])\r\n        .range([0, width-50]);\r\n         svg.append(\"g\")\r\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n            .call(d3.axisBottom(x));\r\n         //YAxis       \r\n         var y = d3.scaleLinear()\r\n        .domain([50000, 120000])\r\n         .range([height, 20]);\r\n         svg.append(\"g\")\r\n            .call(d3.axisLeft(y));\r\n        //Draw the lines\r\n        svg.selectAll()\r\n                .data(IncomeCitiesData).enter()\r\n                .append('path')\r\n                .attr('fill', 'none')\r\n                .attr('stroke', d => d.color)\r\n                .attr('stroke-width', 2)\r\n                .datum(d => d.history)\r\n                .attr(\"d\", d3.line()\r\n                .x(function (d) { return x(d.year) })\r\n                .y(function (d) { return y(d.income) })\r\n            )\r\n            //Label the lines\r\n            svg.selectAll()\r\n                .data(IncomeCitiesData).enter()\r\n                .append('text')\r\n                .html(d => d.name)\r\n                .attr('fill', d => d.color)\r\n                .attr('alignment-baseline', 'middle')\r\n                .attr('x', width)\r\n                .attr('dx', '-3em')\r\n                .attr('y', d => y(d.height));\r\n\r\n                var tipBox = svg.append('rect')\r\n                .attr('width', width)\r\n                .attr('height', height)\r\n                .attr('opacity', 0)\r\n                .on('mousemove', drawTooltip)\r\n                .on('mouseout', removeTooltip);\r\n        \r\n\r\n        function removeTooltip() {\r\n            if (tooltip) tooltip.style('display', 'none');\r\n            if (tooltipLine) tooltipLine.attr('stroke', 'none');\r\n        }\r\n\r\n        function drawTooltip() {\r\n            const year = Math.floor(x.invert(d3.mouse(this)[0]));\r\n           \r\n            tooltipLine.attr('stroke', 'grey')\r\n                .attr('x1', x(year))\r\n                .attr('x2', x(year))\r\n                .attr('y1', 0)\r\n                .attr('y2', height);\r\n\r\n            tooltip.html(year)\r\n                .style('display', 'block')\r\n                .style('left', d3.event.pageX + 20 + \"px\")\r\n                .style('top', d3.event.pageY - 20 + \"px\")\r\n                .selectAll()\r\n                .data(IncomeCitiesData).enter()\r\n                .append('div')\r\n                .style('color', d => d.color)\r\n                .html(d => d.name + ': $' + formatComma(d.history.find(h => h.year === year).income));\r\n        }\r\n    }\r\n            render() {\r\n                return (\r\n                    <div>\r\n                     <div id='tooltip' style={{position:'absolute',backgroundColor:'lightgray',padding:'5px'}}></div>\r\n                    <div id=\"income_data\"></div>\r\n                   \r\n                    </div>\r\n                )\r\n            }\r\n        };\r\n        export default IncomeComparison;","import React from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nconst UnemploymentCrimeData = [\r\n    {\r\n        'year': 2001,\r\n        'unemployment': 4.7,\r\n        'crime': 69037\r\n    },\r\n    {\r\n        'year': 2002,\r\n        'unemployment': 5.73,\r\n        'crime': 69850\r\n    },\r\n    {\r\n        'year': 2003,\r\n        'unemployment': 5.35,\r\n        'crime': 71287\r\n    },\r\n    {\r\n        'year': 2004,\r\n        'unemployment': 5.02,\r\n        'crime': 69667\r\n    },\r\n    {\r\n        'year': 2005,\r\n        'unemployment': 3.92,\r\n        'crime': 69972\r\n    },\r\n    {\r\n        'year': 2006,\r\n        'unemployment': 3.42,\r\n        'crime': 70961\r\n    },\r\n    {\r\n        'year': 2007,\r\n        'unemployment': 3.36,\r\n        'crime': 67232\r\n    },\r\n    {\r\n        'year': 2008,\r\n        'unemployment': 3.34,\r\n        'crime': 63787\r\n    },\r\n    {\r\n        'year': 2009,\r\n        'unemployment': 6.46,\r\n        'crime': 61815\r\n    },\r\n    {\r\n        'year': 2010,\r\n        'unemployment': 6.91,\r\n        'crime': 59636\r\n    },\r\n    {\r\n        'year': 2011,\r\n        'unemployment': 5.9,\r\n        'crime': 55168\r\n    },\r\n    {\r\n        'year': 2012,\r\n        'unemployment': 4.92,\r\n        'crime': 53461\r\n    },\r\n    {\r\n        'year': 2013,\r\n        'unemployment': 4.85,\r\n        'crime': 53591\r\n    },\r\n    {\r\n        'year': 2014,\r\n        'unemployment': 5.03,\r\n        'crime': 54572\r\n    },\r\n    {\r\n        'year': 2015,\r\n        'unemployment': 6.16,\r\n        'crime': 68521\r\n    },\r\n    {\r\n        'year': 2016,\r\n        'unemployment': 9.11,\r\n        'crime': 72505\r\n    },\r\n    {\r\n        'year': 2017,\r\n        'unemployment': 8.71,\r\n        'crime': 75238\r\n    }\r\n];\r\nclass UnemploymentVsCrime extends React.Component {\r\n    componentDidMount() {\r\n        this.drawChart();\r\n    }\r\n    drawChart() {\r\n\r\n        // set the dimensions and margins of the graph\r\n        var margin = { top: 30, right: 30, bottom: 70, left: 60 },\r\n            width = 800 - margin.left - margin.right,\r\n            height = 320 - margin.top - margin.bottom;\r\n        //Set variable        \r\n        const formatComma = d3.format(\",\")\r\n\r\n        //Set svg\r\n        const svg = d3.select(\"#unemployment_crime_data\")\r\n            .append(\"svg\")\r\n            .attr(\"width\", width + margin.left + margin.right)\r\n            .attr(\"height\", height + margin.top + margin.bottom)\r\n            //.style(\"margin-left\", \"300\");\r\n            .append(\"g\")\r\n            .attr(\"transform\",\r\n                \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n        // Draw axis\r\n        // Add X axis\r\n        var x = d3.scaleLinear()\r\n            .domain([50000, 80000])\r\n            .range([0, width]);\r\n        svg.append(\"g\")\r\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n            .call(d3.axisBottom(x));\r\n\r\n        // Add Y axis\r\n        var y = d3.scaleLinear()\r\n            .domain([0, 10])\r\n            .range([height, 0]);\r\n        svg.append(\"g\")\r\n            .call(d3.axisLeft(y));\r\n      \r\n        // Add dots\r\n        svg.append('g')\r\n            .selectAll(\"dot\")\r\n            .data(UnemploymentCrimeData)\r\n            .enter()\r\n            .append(\"circle\")\r\n            .attr(\"cx\", function (d) { return x(d.crime); })\r\n            .attr(\"cy\", function (d) { return y(d.unemployment); })\r\n            .attr(\"r\", 7)\r\n            .style(\"fill\", \"blue\")\r\n            .style(\"opacity\", 0.7)\r\n            .style(\"stroke\", \"white\")\r\n            //tooltip\r\n            .append('title')\r\n            .attr(\"data-html\", \"true\")\r\n            .html(function (d) { return \"Unemployment rate : \" + d.unemployment + \", Total recorded crime: \" + d.crime +\" (\"+d.year+\")\";})\r\n        // text label for the x axis\r\n        svg.append(\"text\")\r\n            .attr(\"transform\",\r\n                \"translate(\" + (width / 2) + \" ,\" +\r\n                (height + margin.top + 20) + \")\")\r\n            .style(\"text-anchor\", \"middle\")\r\n            .style(\"font-size\", \"12px\")\r\n            .text(\"Total reported crimes\");\r\n        // text label for the y axis\r\n        svg.append(\"text\")\r\n            .attr(\"transform\", \"rotate(-90)\")\r\n            .attr(\"y\", 0 - margin.left)\r\n            .attr(\"x\", 0 - (height / 2))\r\n            .attr(\"dy\", \"1em\")\r\n            .style(\"text-anchor\", \"middle\")\r\n            .style(\"font-size\", \"12px\")\r\n            .text(\"Unemployment rate\");\r\n\r\n        //Add title\r\n        svg.append(\"text\")\r\n            .attr(\"x\", 200)\r\n            .attr(\"y\", 15)\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .style(\"font-size\", \"20px\")\r\n            //.attr(\"font-weight\",'bold')          \r\n            .text(\"Unemployment rate Vs Crime\");\r\n        svg.append(\"text\")\r\n            .attr(\"x\", 200)\r\n            .attr(\"y\", 40)\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .style(\"font-size\", \"15px\")\r\n            .style(\"font-style\", \"italic\")\r\n            //.attr(\"font-weight\",'bold')          \r\n            .text(\"Correlation coefficient: 0.20\");\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"unemployment_crime_data\"></div>\r\n        )\r\n    }\r\n};\r\nexport default UnemploymentVsCrime;","import React from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nconst UnemploymentIncomeData = [\r\n    {\r\n        'year': 2001,\r\n        'unemployment': 4.7,\r\n        'income': 64700\r\n    },\r\n    {\r\n        'year': 2002,\r\n        'unemployment': 5.73,\r\n        'income': 66200\r\n    },\r\n    {\r\n        'year': 2003,\r\n        'unemployment': 5.35,\r\n        'income': 67200\r\n    },\r\n    {\r\n        'year': 2004,\r\n        'unemployment': 5.02,\r\n        'income': 70500\r\n    },\r\n    {\r\n        'year': 2005,\r\n        'unemployment': 3.92,\r\n        'income': 74700\r\n    },\r\n    {\r\n        'year': 2006,\r\n        'unemployment': 3.42,\r\n        'income': 82600\r\n    },\r\n    {\r\n        'year': 2007,\r\n        'unemployment': 3.36,\r\n        'income': 87120\r\n    },\r\n    {\r\n        'year': 2008,\r\n        'unemployment': 3.34,\r\n        'income': 90630\r\n    },\r\n    {\r\n        'year': 2009,\r\n        'unemployment': 6.46,\r\n        'income': 87470\r\n    },\r\n    {\r\n        'year': 2010,\r\n        'unemployment': 6.91,\r\n        'income': 88400\r\n    },\r\n    {\r\n        'year': 2011,\r\n        'unemployment': 5.9,\r\n        'income': 92160\r\n    },\r\n    {\r\n        'year': 2012,\r\n        'unemployment': 4.92,\r\n        'income': 96990\r\n    },\r\n    {\r\n        'year': 2013,\r\n        'unemployment': 4.85,\r\n        'income': 99850\r\n    },\r\n    {\r\n        'year': 2014,\r\n        'unemployment': 5.03,\r\n        'income': 102890\r\n    },\r\n    {\r\n        'year': 2015,\r\n        'unemployment': 6.16,\r\n        'income': 102700\r\n    },\r\n    {\r\n        'year': 2016,\r\n        'unemployment': 9.11,\r\n        'income': 98620\r\n    },\r\n    {\r\n        'year': 2017,\r\n        'unemployment': 8.71,\r\n        'income': 100320\r\n    }\r\n];\r\nconst TrendLine = [\r\n    {\r\n        'x': 65000,\r\n        'y': 4.3839\r\n    },\r\n    {\r\n        'x': 105000,\r\n        'y': 5.9839\r\n    },\r\n];\r\nclass UnemploymentVsIncome extends React.Component {\r\n    componentDidMount() {\r\n        this.drawChart();\r\n    }\r\n    drawChart() {\r\n\r\n        // set the dimensions and margins of the graph\r\n        var margin = { top: 30, right: 30, bottom: 70, left: 60 },\r\n            width = 800 - margin.left - margin.right,\r\n            height = 320 - margin.top - margin.bottom;\r\n        //Set variable        \r\n        const formatComma = d3.format(\",\")\r\n\r\n        //Set svg\r\n        const svg = d3.select(\"#unemployment_income_data\")\r\n            .append(\"svg\")\r\n            .attr(\"width\", width + margin.left + margin.right)\r\n            .attr(\"height\", height + margin.top + margin.bottom)\r\n            //.style(\"margin-left\", \"300\");\r\n            .append(\"g\")\r\n            .attr(\"transform\",\r\n                \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n        // Draw axis\r\n        // Add X axis\r\n        var x = d3.scaleLinear()\r\n            .domain([60000, 110000])\r\n            .range([0, width]);\r\n        svg.append(\"g\")\r\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n            .call(d3.axisBottom(x));\r\n\r\n        // Add Y axis\r\n        var y = d3.scaleLinear()\r\n            .domain([0, 10])\r\n            .range([height, 0]);\r\n        svg.append(\"g\")\r\n            .call(d3.axisLeft(y));\r\n\r\n        // Add dots\r\n        svg.append('g')\r\n            .selectAll(\"dot\")\r\n            .data(UnemploymentIncomeData)\r\n            .enter()\r\n            .append(\"circle\")\r\n            .attr(\"cx\", function (d) { return x(d.income); })\r\n            .attr(\"cy\", function (d) { return y(d.unemployment); })\r\n            .attr(\"r\", 7)\r\n            .style(\"fill\", \"blue\")\r\n            .style(\"opacity\", 0.7)\r\n            .style(\"stroke\", \"white\")\r\n            //tooltip\r\n            .append('title')\r\n            .attr(\"data-html\", \"true\")\r\n            .html(function (d) { return \"Unemployment rate : \" + d.unemployment + \", Median Income: $\" + formatComma(d.income) + \" (\" + d.year + \")\"; })\r\n        //Add trendline\r\n        svg.append(\"path\")\r\n            .datum(TrendLine)\r\n            .attr(\"fill\", \"none\")\r\n            .attr(\"stroke\", \"blue\")\r\n            .style(\"stroke-dasharray\", (\"3, 3\"))\r\n            .attr(\"stroke-width\", 1.5)\r\n            .attr(\"d\", d3.line()\r\n                .x(function (d) { return x(d.x) })\r\n                .y(function (d) { return y(d.y) })\r\n            )\r\n        //Add equation\r\n        svg.append(\"text\")\r\n            .attr(\"x\", 670)\r\n            .attr(\"y\", 85)\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .style(\"font-size\", \"10px\")\r\n            //.attr(\"font-weight\",'bold')          \r\n            .text(\"eq: y = 4E-05x+1.7839\");\r\n        // text label for the x axis\r\n        svg.append(\"text\")\r\n            .attr(\"transform\",\r\n                \"translate(\" + (width / 2) + \" ,\" +\r\n                (height + margin.top + 20) + \")\")\r\n            .style(\"text-anchor\", \"middle\")\r\n            .style(\"font-size\", \"12px\")\r\n            .text(\"Median Income\");\r\n        // text label for the y axis\r\n        svg.append(\"text\")\r\n            .attr(\"transform\", \"rotate(-90)\")\r\n            .attr(\"y\", 0 - margin.left)\r\n            .attr(\"x\", 0 - (height / 2))\r\n            .attr(\"dy\", \"1em\")\r\n            .style(\"text-anchor\", \"middle\")\r\n            .style(\"font-size\", \"12px\")\r\n            .text(\"Unemployment rate\");\r\n        //Add title\r\n        svg.append(\"text\")\r\n            .attr(\"x\", 200)\r\n            .attr(\"y\", 15)\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .style(\"font-size\", \"20px\")\r\n            //.attr(\"font-weight\",'bold')          \r\n            .text(\"Unemployment rate Vs Median Income\");\r\n        svg.append(\"text\")\r\n            .attr(\"x\", 200)\r\n            .attr(\"y\", 40)\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .style(\"font-size\", \"15px\")\r\n            .style(\"font-style\", \"italic\")\r\n            //.attr(\"font-weight\",'bold')          \r\n            .text(\"Correlation coefficient: 0.48\");\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"unemployment_income_data\"></div>\r\n        )\r\n    }\r\n};\r\nexport default UnemploymentVsIncome;","import React from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nconst AgeGroupPopulationData = [\r\n    {\r\n        \"Children\": 18.32,\r\n        \"Youth\": 11.97,\r\n        \"Adult\": 58.54,\r\n        \"Senior\": 11.17\r\n    },\r\n    {\r\n        \"year\": 2011,\r\n        \"children\": 17.91,\r\n        \"youth\": 13.14,\r\n        \"adult\": 59.00,\r\n        \"senior\": 9.95\r\n    },\r\n    {\r\n        \"year\": 2006,\r\n        \"children\": 18.45,\r\n        \"youth\": 14.39,\r\n        \"adult\": 57.79,\r\n        \"senior\": 9.38\r\n    }\r\n\r\n];\r\nclass AgeGroupPopulation extends React.Component {\r\n    componentDidMount() {\r\n        this.drawChart();\r\n    }\r\n    drawChart() {\r\n\r\n        // set the dimensions and margins of the graph\r\n        var width = 450\r\n        var height = 450\r\n        var margin = 40\r\n        // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.\r\n        var radius = Math.min(width, height) / 2 - margin\r\n        //Set svg\r\n        const svg = d3.select(\"#age_group_data\")\r\n            .append(\"svg\")\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height)\r\n            .append(\"g\")\r\n            .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\r\n        // set the color scale\r\n        var color = d3.scaleOrdinal()\r\n            .domain(AgeGroupPopulationData)\r\n            .range(d3.schemeSet2);\r\n        // Compute the position of each group on the pie:\r\n        var pie = d3.pie()\r\n            .value(function (d) { return d.value; })\r\n        var data_ready = pie(d3.entries(AgeGroupPopulationData[0]))\r\n        // shape helper to build arcs:\r\n        var arcGenerator = d3.arc()\r\n            .innerRadius(0)\r\n            .outerRadius(radius)\r\n        // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\r\n        svg\r\n            .selectAll('mySlices')\r\n            .data(data_ready)\r\n            .enter()\r\n            .append('path')\r\n            .attr('d', arcGenerator)\r\n            .attr('fill', function (d) { return (color(d.data.key)) })\r\n            .attr(\"stroke\", \"black\")\r\n            .style(\"stroke-width\", \"2px\")\r\n            .style(\"opacity\", 0.7)\r\n        //Add title\r\n        svg.append(\"text\")\r\n            .attr(\"x\", -100)\r\n            .attr(\"y\", -200)\r\n            .attr(\"text-anchor\", \"begin\")\r\n            .style(\"font-size\", \"20px\")\r\n            //.attr(\"font-weight\",'bold')          \r\n            .text(\"Age structure in Calgary in 2016\");\r\n        //Add anotation\r\n        svg\r\n            .selectAll('mySlices')\r\n            .data(data_ready)\r\n            .enter()\r\n            .append('text')\r\n            .text(function (d) { return d.data.key })\r\n            .attr(\"transform\", function (d) { return \"translate(\" + arcGenerator.centroid(d) + \")\"; })\r\n            .style(\"text-anchor\", \"middle\")\r\n            .style(\"font-size\", 17)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id='tooltip' style={{ position: 'absolute', backgroundColor: 'lightgray', padding: '5px' }}></div>\r\n                <div id=\"age_group_data\"></div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n};\r\nexport default AgeGroupPopulation;","import React from 'react'\nimport './App.css';\nimport Population from './Population';\nimport MedianIncome from './MedianIncome';\nimport IncomeComparison from './IncomeComparison';\nimport UnemploymentVsCrime from './UnemploymentVsCrime';\nimport UnemploymentVsIncome from './UnemploymentVsIncome';\nimport AgeGroupPopulation from './AgeGroupPopulation';\n\nclass App extends React.Component {\n  \n  state = {\n    width: 700,\n    height: 500,\n    id: 'root'\n  }\n\n  render() {\n    return (\n\n      <div className=\"App\">\n        <div> \n          <h1> Statistics Calgary </h1>\n        </div>\n        <div className=\"Text\">\n          <p> Mouse over the graph for more detail</p>\n          <p style={{fontStyle: 'italic'}}> Data source: Alberta Open Government, Statistics Canada</p>\n          <p> <br /></p>\n        </div>\n        <div>\n          <Population  />\n        </div>  \n        <div>\n          <AgeGroupPopulation />\n         </div> \n        <div>\n          <MedianIncome />\n        </div>  \n        <div>\n          <IncomeComparison />\n        </div>\n        <div>\n          <UnemploymentVsCrime/>\n        </div>\n        <div>\n          <UnemploymentVsIncome />\n        </div>\n                \n      </div>\n    );\n  }\n};\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}